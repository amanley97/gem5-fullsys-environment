/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   build_tools/sim_object_param_struct_hh.py:235
 */

#ifndef __PARAMS__ArmISA__
#define __PARAMS__ArmISA__

namespace gem5 {
namespace ArmISA {
class ISA;
} // namespace ArmISA
} // namespace gem5
#include <cstddef>
#include "enums/DecoderFlavor.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "params/ArmPMU.hh"
#include <cstddef>
#include "params/ArmRelease.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "params/System.hh"

#include "params/BaseISA.hh"

#include "enums/DecoderFlavor.hh"

namespace gem5
{
struct ArmISAParams
    : public BaseISAParams
{
    gem5::ArmISA::ISA * create() const;
    enums::DecoderFlavor decoderFlavor;
    uint32_t fpsid;
    uint64_t id_aa64afr0_el1;
    uint64_t id_aa64afr1_el1;
    uint64_t id_aa64dfr0_el1;
    uint64_t id_aa64dfr1_el1;
    uint64_t id_aa64isar0_el1;
    uint64_t id_aa64isar1_el1;
    uint64_t id_aa64mmfr0_el1;
    uint64_t id_aa64mmfr1_el1;
    uint64_t id_aa64mmfr2_el1;
    uint32_t id_isar0;
    uint32_t id_isar1;
    uint32_t id_isar2;
    uint32_t id_isar3;
    uint32_t id_isar4;
    uint32_t id_isar5;
    uint32_t id_isar6;
    uint32_t id_mmfr0;
    uint32_t id_mmfr1;
    uint32_t id_mmfr2;
    uint32_t id_mmfr3;
    uint32_t id_mmfr4;
    bool impdef_nop;
    uint32_t midr;
    gem5::ArmISA::PMU * pmu;
    gem5::ArmRelease * release_se;
    uint8_t sve_vl_se;
    gem5::System * system;
};

} // namespace gem5

#endif // __PARAMS__ArmISA__
