/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   build_tools/sim_object_param_struct_hh.py:235
 */

#ifndef __PARAMS__Cache_Controller__
#define __PARAMS__Cache_Controller__

namespace gem5 {
namespace ruby {
class Cache_Controller;
} // namespace ruby
} // namespace gem5
#include <cstddef>
#include <cstddef>
#include <cstddef>
#include <cstddef>
#include <cstddef>
#include <cstddef>
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include <cstddef>
#include "params/RubyCache.hh"
#include <cstddef>
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "params/MessageBuffer.hh"
#include <cstddef>
#include "params/MessageBuffer.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include <cstddef>
#include <cstddef>
#include <cstddef>
#include <cstddef>
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include <cstddef>
#include <cstddef>
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include <cstddef>
#include <cstddef>
#include "params/MessageBuffer.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "params/MessageBuffer.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "params/MessageBuffer.hh"
#include <cstddef>
#include "params/MessageBuffer.hh"
#include <cstddef>
#include "params/MessageBuffer.hh"
#include <cstddef>
#include "params/MessageBuffer.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "params/MessageBuffer.hh"
#include <cstddef>
#include "params/MessageBuffer.hh"
#include <cstddef>
#include "params/MessageBuffer.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include <cstddef>
#include "params/RubySequencer.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "params/MessageBuffer.hh"
#include <cstddef>
#include "params/MessageBuffer.hh"
#include <cstddef>
#include "params/MessageBuffer.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include <cstddef>
#include "params/MessageBuffer.hh"
#include <cstddef>
#include <cstddef>
#include <cstddef>
#include <cstddef>
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"

#include "params/RubyController.hh"

namespace gem5
{
struct Cache_ControllerParams
    : public RubyControllerParams
{
    gem5::ruby::Cache_Controller * create() const;
    bool alloc_on_readonce;
    bool alloc_on_readshared;
    bool alloc_on_readunique;
    bool alloc_on_seq_acc;
    bool alloc_on_seq_line_write;
    bool alloc_on_writeback;
    Cycles allocation_latency;
    bool allow_SD;
    gem5::ruby::CacheMemory * cache;
    bool comp_wu;
    Cycles comp_wu_latency;
    gem5::ruby::MessageBuffer * datIn;
    gem5::ruby::MessageBuffer * datOut;
    int data_channel_size;
    Cycles data_latency;
    bool dealloc_backinv_shared;
    bool dealloc_backinv_unique;
    bool dealloc_on_shared;
    bool dealloc_on_unique;
    bool dealloc_wait_for_tag;
    Cycles dvm_ext_tlbi_latency;
    bool enable_DCT;
    bool enable_DMT;
    bool enable_DMT_early_dealloc;
    Cycles fill_latency;
    bool fwd_unique_on_readshared;
    bool is_HN;
    gem5::ruby::MessageBuffer * mandatoryQueue;
    int number_of_DVM_TBEs;
    int number_of_DVM_snoop_TBEs;
    int number_of_repl_TBEs;
    int number_of_snoop_TBEs;
    gem5::ruby::MessageBuffer * prefetchQueue;
    Cycles read_hit_latency;
    Cycles read_miss_latency;
    gem5::ruby::MessageBuffer * replTriggerQueue;
    gem5::ruby::MessageBuffer * reqIn;
    gem5::ruby::MessageBuffer * reqOut;
    gem5::ruby::MessageBuffer * reqRdy;
    Cycles request_latency;
    Cycles response_latency;
    gem5::ruby::MessageBuffer * retryTriggerQueue;
    gem5::ruby::MessageBuffer * rspIn;
    gem5::ruby::MessageBuffer * rspOut;
    int sc_lock_base_latency_cy;
    bool sc_lock_enabled;
    int sc_lock_multiplier_decay;
    int sc_lock_multiplier_inc;
    int sc_lock_multiplier_max;
    bool send_evictions;
    gem5::ruby::Sequencer * sequencer;
    Cycles snoop_latency;
    gem5::ruby::MessageBuffer * snpIn;
    gem5::ruby::MessageBuffer * snpOut;
    gem5::ruby::MessageBuffer * snpRdy;
    Cycles snp_inv_latency;
    Cycles snp_latency;
    Cycles stall_recycle_lat;
    bool throttle_req_on_retry;
    gem5::ruby::MessageBuffer * triggerQueue;
    bool unify_repl_TBEs;
    bool upstream_prefetch_trains_prefetcher;
    bool use_prefetcher;
    bool wait_for_cache_wr;
    Cycles write_be_latency;
    Cycles write_fe_latency;
};

} // namespace gem5

#endif // __PARAMS__Cache_Controller__
