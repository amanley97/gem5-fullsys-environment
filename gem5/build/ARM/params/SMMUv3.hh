/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   build_tools/sim_object_param_struct_hh.py:235
 */

#ifndef __PARAMS__SMMUv3__
#define __PARAMS__SMMUv3__

namespace gem5 {
class SMMUv3;
} // namespace gem5
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include <string>
#include <cstddef>
#include "base/types.hh"
#include <vector>
#include "params/SMMUv3DeviceInterface.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include <string>
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include "base/addr_range.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "params/System.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include <string>
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include <string>
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"

#include "params/ClockedObject.hh"

namespace gem5
{
struct SMMUv3Params
    : public ClockedObjectParams
{
    gem5::SMMUv3 * create() const;
    unsigned cfg_assoc;
    bool cfg_enable;
    unsigned cfg_entries;
    Cycles cfg_lat;
    std::string cfg_policy;
    Cycles cfg_slots;
    std::vector< gem5::SMMUv3DeviceInterface * > device_interfaces;
    Cycles ifc_smmu_lat;
    unsigned ipa_assoc;
    bool ipa_enable;
    unsigned ipa_entries;
    Cycles ipa_lat;
    std::string ipa_policy;
    Cycles ipa_slots;
    bool irq_interface_enable;
    unsigned ptw_slots;
    AddrRange reg_map;
    unsigned request_port_width;
    Tick sample_period;
    uint32_t smmu_aidr;
    uint32_t smmu_idr0;
    uint32_t smmu_idr1;
    uint32_t smmu_idr2;
    uint32_t smmu_idr3;
    uint32_t smmu_idr4;
    uint32_t smmu_idr5;
    Cycles smmu_ifc_lat;
    uint32_t smmu_iidr;
    gem5::System * system;
    unsigned tlb_assoc;
    bool tlb_enable;
    unsigned tlb_entries;
    Cycles tlb_lat;
    std::string tlb_policy;
    Cycles tlb_slots;
    unsigned walk_S1L0;
    unsigned walk_S1L1;
    unsigned walk_S1L2;
    unsigned walk_S1L3;
    unsigned walk_S2L0;
    unsigned walk_S2L1;
    unsigned walk_S2L2;
    unsigned walk_S2L3;
    unsigned walk_assoc;
    bool walk_enable;
    Cycles walk_lat;
    std::string walk_policy;
    Cycles walk_slots;
    bool wc_nonfinal_enable;
    unsigned wc_s1_levels;
    unsigned wc_s2_levels;
    unsigned xlate_slots;
    unsigned int port_request_connection_count;
    unsigned int port_walker_connection_count;
    unsigned int port_control_connection_count;
};

} // namespace gem5

#endif // __PARAMS__SMMUv3__
