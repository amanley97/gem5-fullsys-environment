/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   build_tools/enum_cc.py:170
 */

#include "base/compiler.hh"
#include "enums/ArmInterruptType.hh"

namespace gem5
{

const char *ArmInterruptTypeStrings[static_cast<int>(ArmInterruptType::Num_ArmInterruptType)] =
{
    "IRQ_TYPE_EDGE_FALLING",
    "IRQ_TYPE_EDGE_RISING",
    "IRQ_TYPE_LEVEL_HIGH",
    "IRQ_TYPE_LEVEL_LOW",
};
} // namespace gem5
#include "pybind11/pybind11.h"
#include "pybind11/stl.h"

#include <sim/init.hh>

namespace py = pybind11;

namespace gem5
{

static void
module_init(py::module_ &m_internal)
{
    py::module_ m = m_internal.def_submodule("enum_ArmInterruptType");

py::enum_<ArmInterruptType>(m, "enum_ArmInterruptType")
        .value("IRQ_TYPE_EDGE_FALLING", ArmInterruptType::IRQ_TYPE_EDGE_FALLING)
        .value("IRQ_TYPE_EDGE_RISING", ArmInterruptType::IRQ_TYPE_EDGE_RISING)
        .value("IRQ_TYPE_LEVEL_HIGH", ArmInterruptType::IRQ_TYPE_LEVEL_HIGH)
        .value("IRQ_TYPE_LEVEL_LOW", ArmInterruptType::IRQ_TYPE_LEVEL_LOW)
        .value("Num_ArmInterruptType", ArmInterruptType::Num_ArmInterruptType)
        ;
    }
static EmbeddedPyBind embed_enum("enum_ArmInterruptType", module_init);

} // namespace gem5
    
